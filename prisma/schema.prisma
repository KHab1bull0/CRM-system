// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Mijozlar
model Customer {
  id        String   @id @default(uuid())
  firstName String?
  lastName  String?
  email     String?   @unique
  phone     String
  address   String?
  vehicles  Vehicle[]
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Avtomobillar
model Vehicle {
  id           String   @id @default(uuid())
  make         String
  model        String
  year         Int
  vinNumber    String   @unique
  licensePlate String?
  customerId   String
  customer     Customer @relation(fields: [customerId], references: [id])
  orders       Order[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

// Buyurtmalar
model Order {
  id          Int       @id @default(autoincrement())
  customer    Customer  @relation(fields: [customerId], references: [id])
  customerId  String
  vehicle     Vehicle   @relation(fields: [vehicleId], references: [id])
  vehicleId   String
  serviceType String
  status      String
  totalCost   Float
  services    Service[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Xizmatlar
model Service {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Xodimlar
model Employee {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  phone     String
  position  String
  salary    Float
  hireDate  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Inventar
model Inventory {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  quantity    Int
  price       Float
  supplier    Supplier @relation(fields: [supplierId], references: [id])
  supplierId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Yetkazib beruvchilar
model Supplier {
  id        Int         @id @default(autoincrement())
  name      String
  email     String      @unique
  phone     String
  address   String?
  inventory Inventory[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

// Moliyaviy operatsiyalar
model FinancialTransaction {
  id          Int      @id @default(autoincrement())
  amount      Float
  type        String // 'income' yoki 'expense'
  description String?
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


